{
  "error_categories": {
    "rate_limit": {
      "indicators": ["429", "rate_limit", "quota_exceeded"],
      "handling": {
        "strategy": "exponential_backoff",
        "initial_delay": 1000,
        "max_retries": 5,
        "fallback": "queue_for_later"
      }
    },
    "authentication": {
      "indicators": ["401", "403", "unauthorized", "forbidden"],
      "handling": {
        "strategy": "refresh_and_retry",
        "max_attempts": 2,
        "fallback": "alert_admin"
      }
    },
    "timeout": {
      "indicators": ["ETIMEDOUT", "ECONNRESET", "timeout"],
      "handling": {
        "strategy": "retry_with_shorter_timeout",
        "timeout_reduction": 0.5,
        "max_retries": 3,
        "fallback": "use_cached_response"
      }
    },
    "server_error": {
      "indicators": ["500", "502", "503", "504"],
      "handling": {
        "strategy": "circuit_breaker",
        "threshold": 5,
        "timeout": 60000,
        "fallback": "use_alternative_service"
      }
    },
    "validation": {
      "indicators": ["400", "validation_error", "invalid_request"],
      "handling": {
        "strategy": "parse_and_fix",
        "max_attempts": 1,
        "fallback": "log_and_skip"
      }
    }
  },
  "recovery_strategies": {
    "exponential_backoff": {
      "formula": "min(initial_delay * Math.pow(2, attempt), max_delay)",
      "jitter": true,
      "max_delay": 60000
    },
    "circuit_breaker": {
      "states": ["closed", "open", "half_open"],
      "failure_threshold": 5,
      "recovery_timeout": 60000,
      "monitoring_period": 120000
    },
    "retry_policies": {
      "default": {
        "max_attempts": 3,
        "backoff_multiplier": 2,
        "randomization_factor": 0.5
      },
      "aggressive": {
        "max_attempts": 10,
        "backoff_multiplier": 1.5,
        "randomization_factor": 0.3
      },
      "conservative": {
        "max_attempts": 2,
        "backoff_multiplier": 3,
        "randomization_factor": 0.7
      }
    }
  },
  "logging_templates": {
    "error_log": {
      "timestamp": "ISO8601",
      "correlation_id": "UUID",
      "workflow_id": "string",
      "node_id": "string",
      "error_type": "string",
      "error_message": "string",
      "stack_trace": "string",
      "context": "object",
      "recovery_action": "string"
    }
  }
}
